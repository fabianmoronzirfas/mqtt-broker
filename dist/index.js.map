{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;IAAY;;;;AACZ,IAAM,QAAQ,QAAQ,OAAR,CAAR;;;;AAIN,IAAI,WAAW;AACb,QAAM,MAAN;AACA,QAAM,KAAN;AACA,QAAM,QAAQ,MAAR,CAAN;AACA,QAAM,WAAN;AACA,QAAM,IAAN;CALE;;AAQJ,IAAI,SAAS,IAAI,MAAM,MAAN,CAAa,QAAjB,CAAT;AACJ,OAAO,EAAP,CAAU,iBAAV,EAA6B,UAAC,MAAD,EAAY;AACvC,MAAI,WAAW,SAAX,EAAsB;AACxB,YAAQ,GAAR,aAAsB,MAAM,KAAN,CAAY,OAAO,EAAP,gBAAlC,EADwB;GAA1B;;AADuC,CAAZ,CAA7B;;AAOA,OAAO,EAAP,CAAU,qBAAV,EAAiC,UAAC,MAAD,EAAY;AAC3C,MAAI,WAAW,SAAX,EAAsB;AACxB,YAAQ,GAAR,aAAsB,MAAM,GAAN,CAAU,OAAO,EAAP,uBAAhC,EADwB;GAA1B;CAD+B,CAAjC;;AAMA,OAAO,EAAP,CAAU,oBAAV,EAAgC,UAAC,MAAD,EAAY;AAC1C,MAAI,WAAW,SAAX,EAAsB;AACxB,YAAQ,GAAR,aAAsB,MAAM,GAAN,CAAU,OAAO,EAAP,iCAAhC,EADwB;GAA1B;CAD8B,CAAhC;;;AAOA,OAAO,EAAP,CAAU,WAAV,EAAuB,UAAC,MAAD,EAAS,MAAT,EAAoB;AACzC,MAAI,WAAW,SAAX,EAAsB;AACxB,YAAQ,GAAR,aAAsB,MAAM,KAAN,CAAY,OAAO,EAAP,8CACrB,MAAM,IAAN,CAAW,OAAO,KAAP,yBACZ,MAAM,IAAN,CAAW,OAAO,OAAP,CAAe,QAAf,CAAwB,MAAxB,CAAX,CAFZ,EADwB;GAA1B;;;;AADyC,CAApB,CAAvB;;AAWA,OAAO,EAAP,CAAU,cAAV,EAA0B,UAAC,KAAD,EAAQ,MAAR,EAAmB;AAC3C,MAAI,WAAW,SAAX,EAAsB;AACxB,YAAQ,GAAR,aAAsB,MAAM,GAAN,CAAU,OAAO,EAAP,4BAAgC,MAAM,IAAN,CAAW,KAAX,CAAhE,EADwB;GAA1B;;;;AAD2C,CAAnB,CAA1B;;AASA,OAAO,EAAP,CAAU,YAAV,EAAwB,UAAC,KAAD,EAAQ,MAAR,EAAmB;AACzC,MAAI,WAAW,SAAX,EAAsB;AACxB,YAAQ,GAAR,aAAsB,MAAM,KAAN,CAAY,OAAO,EAAP,wBAA4B,MAAM,IAAN,CAAW,KAAX,CAA9D,EADwB;GAA1B;;;;AADyC,CAAnB,CAAxB;;;AAUA,OAAO,EAAP,CAAU,OAAV,EAAmB,YAAM;AACvB,UAAQ,GAAR,CAAY,MAAM,IAAN,CAAW,KAAX,CAAiB,OAAjB,CAAyB,gCAAzB,CAAZ,EADuB;CAAN,CAAnB","file":"index.js","sourcesContent":["import * as mosca from 'mosca';\nconst chalk = require('chalk');\n\n// const mosca = require('mosca');\n\nlet settings = {\n  type: 'mqtt',\n  json: false,\n  mqtt: require('mqtt'),\n  host: '127.0.0.1',\n  port: 1883\n};\n\nlet server = new mosca.Server(settings);\nserver.on('clientConnected', (client) => {\n  if (client !== undefined) {\n    console.log(`client ${chalk.green(client.id)} connected`);\n  }\n  // console.log('client -->', client);\n});\n\nserver.on('clientDisconnecting', (client) => {\n  if (client !== undefined) {\n    console.log(`Client ${chalk.red(client.id)} is disconnecting`);\n  }\n});\n\nserver.on('clientDisconnected', (client) => {\n  if (client !== undefined) {\n    console.log(`Client ${chalk.red(client.id)} has disconnected. Bye bye.`);\n  }\n});\n\n// fired when a message is received\nserver.on('published', (packet, client) => {\n  if (client !== undefined) {\n    console.log(`Client ${chalk.green(client.id)} published a message\n      on topic ${chalk.blue(packet.topic)}\n      content ${chalk.blue(packet.payload.toString('utf8'))}`);\n  }\n// console.log(packet);\n// console.log('Received %s from %s', packet.payload, client.id);\n// console.log('Published', packet.payload);\n});\n\nserver.on('unsubscribed', (topic, client) => {\n  if (client !== undefined) {\n    console.log(`Client ${chalk.red(client.id)} unsubscribed from ${chalk.blue(topic)}`);\n  }\n// console.log(packet);\n// console.log('Received %s from %s', packet.payload, chalk.red(client.id));\n// console.log('Published', packet.payload);\n});\n\nserver.on('subscribed', (topic, client) => {\n  if (client !== undefined) {\n    console.log(`Client ${chalk.green(client.id)} subscribed to ${chalk.blue(topic)}`);\n  }\n// console.log(packet);\n// console.log('Received %s from %s', packet.payload, client.id);\n// console.log('Published', packet.payload);\n});\n\n// fired when the mqtt server is ready\nserver.on('ready', () => {\n  console.log(chalk.bold.black.bgGreen('Mosca server is up and running'));\n});\n"],"sourceRoot":"/source/"}